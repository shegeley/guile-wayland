#!@GUILE@ --no-auto-compile -e main
!#

(use-modules
 (wayland client display)
 (oop goops)
 (ice-9 format)
 (system foreign-library)
 ((system foreign) #:prefix ffi:)
 (rnrs bytevectors)
 (wayland interface)
 (wayland proxy)
 (wayland client protocol wayland)
 (wayland client protocol text-input)
 (wayland client protocol xdg-shell))

(gc-disable)

(define seat
  (make-parameter #f))

(define text-input
  (make-parameter #f))

(define text-input-manager
  (make-parameter #f))

(define (main)
  (let* ((w-display (wl-display-connect)))
    (unless w-display
      (display "Unable to connect to wayland compositor")
      (newline)
      (exit -1))
    (display "connect to wayland compositor: ")
    (display w-display)
    (newline)
    (let [(registry (wl-display-get-registry w-display))
          (listener (make <wl-registry-listener>
                      #:global
                      (lambda* (data registry name interface version)
                        (format #t "interface: '~a', version: ~a, name: ~a~%"
                                interface version name)
                        (cond
                         ((string=? "wl_seat" interface)
                          (seat (wrap-wl-seat (wl-registry-bind registry name %wl-seat-interface 3))))
                         ((string=? "zwp_text_input_manager_v3" interface)
                          (format #t "Got call~%")
                          (text-input-manager (wrap-zwp-text-input-manager-v3
                                               (wl-registry-bind registry name
                                                                 %zwp-text-input-manager-v3-interface 1)))
                          (text-input (zwp-text-input-manager-v3-get-text-input
                                       (text-input-manager)
                                       (seat))))))
                      #:global-remove
                      (lambda (data registry name)
                        (pk 'remove data registry name))))]
      (wl-registry-add-listener registry listener))
    (wl-display-roundtrip w-display)
    (if (text-input)
        (format #t "Got it!~%" )
        (error (format #f "Can't access text-input!")))
    (format #t "manager: ~a~%" (text-input-manager))
    (format #t "input: ~a~%" (text-input-manager))
    (zwp-text-input-v3-enable (text-input))
    (zwp-text-input-v3-add-listener
     (text-input)
     (make <zwp-text-input-v3-listener>
       #:enter
       (lambda args
         (format #t "enter! args: ~a ~%" args))
       #:leave
       (lambda args
         (format #t "leave! args: ~a ~%" args))))
    (while (wl-display-dispatch w-display))))
